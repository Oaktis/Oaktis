name: Release to Docker Hub

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          registry: docker.io

      - name: Select Docker Hub namespace
        id: ns
        run: |
          if [ -n "${{ secrets.DOCKERHUB_NAMESPACE }}" ]; then
            echo "NAMESPACE=${{ secrets.DOCKERHUB_NAMESPACE }}" >> $GITHUB_OUTPUT
          else
            echo "NAMESPACE=${{ secrets.DOCKERHUB_USER }}" >> $GITHUB_OUTPUT
          fi

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/oaktis-cli/Dockerfile
          push: true
          tags: |
            ${{ steps.ns.outputs.NAMESPACE }}/cli:latest
            ${{ steps.ns.outputs.NAMESPACE }}/cli:${{ steps.version.outputs.VERSION }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Docker Hub README
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ steps.ns.outputs.NAMESPACE }}/cli
          readme-filepath: docker/oaktis-cli/README.md

      # - name: Create GitHub Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     name: Release ${{ github.ref_name }}
      #     body: |
      #       ## üê≥ Docker Image Released

      #       **oaktis/cli** version ${{ github.ref_name }} has been published to Docker Hub.

      #       ### Usage
      #       ```bash
      #       docker pull oaktis/cli:${{ steps.version.outputs.VERSION }}
      #       docker run -e OAKTIS_API_KEY=your-key oaktis/cli:${{ steps.version.outputs.VERSION }} video "test"
      #       ```

      #       ### Links
      #       - üê≥ [Docker Hub](https://hub.docker.com/r/oaktis/cli)
      #       - üìö [Documentation](https://docs.oaktis.com)
      #       - üêô [GitHub](https://github.com/Oaktis/Oaktis)
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
